{"version":3,"sources":["components/Header/Header.js","components/ListItem/ListItem.js","components/Loader/Loader.js","components/NotFound/NotFound.js","components/Lists/Lists.js","common/config.js","communications/anime_communication.js","common/base_data_service.js","components/App/App.js","index.js"],"names":["Header","props","state","value","handleChange","bind","handleSubmit","e","this","setState","target","preventDefault","onSearchEvent","className","onSubmit","type","placeholder","name","onChange","React","Component","ListItem","data","title","url","image_url","href","loading","src","alt","Loader","class","id","NotFound","Lists","onLoadMoreClick","onLoadMoreEvent","isEnd","Fragment","length","map","item","key","mal_id","onClick","AppConfig","AnimeCommunication","getDataByQuery","query","pageNumber","limit","Promise","resolve","reject","getData","err","res","methodName","onError","onSuccess","responsePromise","fetch","onResponseReceipt","then","response","json","responseJson","catch","exception","error","App","searchQuery","trim","results","fetchData","animeCommunication","resp","concat","last_page","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6WAGqBA,G,wDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAACC,MAAO,IAErB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBALH,E,yDAQNE,GACXC,KAAKC,SAAS,CAACN,MAAOI,EAAEG,OAAOP,U,mCAGpBI,GACXA,EAAEI,iBACFH,KAAKP,MAAMW,cAAcJ,KAAKN,MAAMC,S,+BAIpC,OACE,4BAAQU,UAAU,kBAChB,0BAAMA,UAAU,iBAAiBC,SAAUN,KAAKF,cAC9C,+BACE,2BAAOO,UAAU,eAAgBE,KAAK,OAAOC,YAAY,kCAAkCC,KAAK,QAAQd,MAAOK,KAAKN,MAAMC,MAAOe,SAAUV,KAAKJ,gBAElJ,2BAAOS,UAAU,aAAaE,KAAK,SAASZ,MAAM,a,GAzBxBgB,IAAMC,YCCrBC,G,6KACT,IAAD,EACyBb,KAAKP,MAAMqB,KAApCC,EADA,EACAA,MAAOC,EADP,EACOA,IAAKC,EADZ,EACYA,UACnB,OACE,uBAAGC,KAAMF,EAAKX,UAAU,QACtB,yBAAKA,UAAU,SACb,yBAAKc,QAAQ,OAAOC,IAAKH,EAAWI,IAAKN,KAE3C,yBAAKV,UAAU,cACb,0BAAMA,UAAU,SAASU,S,GATGJ,IAAMC,YCDvBU,G,6KAEjB,OACE,yBAAKC,MAAM,SAASC,GAAG,e,GAHOb,IAAMC,YCCrBa,G,6KAEjB,OACE,8C,GAHgCd,IAAMC,YCGvBc,G,kNAEnBC,gBAAkB,SAAC5B,GACjB,EAAKN,MAAMmC,mB,uDAGH,IAAD,EACwB5B,KAAKP,MAA7B0B,EADA,EACAA,QAASL,EADT,EACSA,KAAMe,EADf,EACeA,MACtB,OACE,kBAAC,IAAMC,SAAP,KACGhB,GAAQA,EAAKiB,OACZ,6BACE,yBAAK1B,UAAU,kBACZS,EAAKkB,KAAI,SAACC,GAAD,OACR,kBAAC,EAAD,CAAUC,IAAKD,EAAKE,OAAQrB,KAAMmB,QAGrCJ,GAASV,EAAU,KAAQ,4BAAQd,UAAU,gBAAgB+B,QAASpC,KAAK2B,iBAAhD,cAG3B,KACJR,EAAU,kBAAC,EAAD,MAAa,KACvBL,GAAwB,IAAhBA,EAAKiB,SAAiBZ,EAAU,kBAAC,EAAD,MAAe,U,GAtB7BR,IAAMC,YCP5ByB,EACF,wBCCUC,E,4MACnBC,eAAiB,SAACC,EAAOC,EAAYC,GACnC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,EAAKC,QAAL,6BACwBN,EADxB,kBACuCE,EADvC,iBACqDD,IACnD,SAAAM,GAAG,OAAIF,EAAOE,MACd,SAAAC,GAAG,OAAIJ,EAAQI,U,8DCJrBF,QAAU,SAACG,EAAYC,EAASC,GAC9B,IACMC,EAAkBC,MAAM,GAAD,OADXhB,GACW,OAAgBY,IAC7C,EAAKK,kBAAkBF,EAAiBF,EAASC,I,KAGnDG,kBAAoB,SAACF,EAAiBF,EAASC,GAC7CC,EAAgBG,MAAK,SAAAC,GACnB,OAAOA,EAASC,UACfF,MAAK,SAAAG,GACNP,EAAUO,MACTC,OAAM,SAAAC,GACPV,EAAQ,CAAEW,MAAOD,WCsDRE,E,kDA1Db,WAAYrE,GAAQ,IAAD,8BACjB,cAAMA,IALRiD,MAAQ,GAIW,EAHnBD,WAAa,EAGM,EAFnBsB,YAAc,GAEK,EAUnB3D,cAAgB,SAACoC,GACf,EAAKC,WAAa,EAClB,EAAKsB,YAAcvB,EAAMwB,OACzB,EAAK/D,SAAS,CACZkB,SAAS,EACT8C,QAAS,KAEX,EAAKC,UAAU,EAAKH,cAjBH,EAoBnBnC,gBAAkB,WAChB,EAAK3B,SAAS,CACZkB,SAAS,IAEX,EAAKsB,aACL,EAAKyB,UAAU,EAAKH,cAzBH,EA4BnBG,UAAY,SAAC1B,GACX,EAAK2B,mBAAmB5B,eAAeC,EAAO,EAAKC,WAAY,EAAKC,OAAOa,MAAK,SAACa,GAC/E,IAAMtD,EAAOsD,EAAKH,SAAW,GAC7B,EAAKhE,UAAS,SAACP,GAAD,MAAY,CACxBuE,QAASvE,EAAMuE,QAAQI,OAAOvD,GAC9BK,SAAS,EACTU,MAAOuC,EAAKE,YAAc,EAAK7B,kBAEhCkB,OAAM,SAAAE,GACP,EAAK5D,SAAS,CACZgE,QAAS,GACT9C,SAAS,EACTU,OAAO,QAtCX,EAAKsC,mBAAqB,IAAI7B,EAC9B,EAAK5C,MAAQ,CACXuE,QAAS,GACT9C,SAAU,EACVU,OAAO,GANQ,E,qDA6CT,IAAD,EAC4B7B,KAAKN,MAAjCyB,EADA,EACAA,QAAS8C,EADT,EACSA,QAASpC,EADlB,EACkBA,MACzB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,CAAQ1B,cAAeJ,KAAKI,gBAC5B,yBAAKC,UAAU,aACb,kBAAC,EAAD,CAAMS,KAAMmD,EAAS9C,QAASA,EAASU,MAAOA,EAAOD,gBAAiB5B,KAAK4B,wB,GAzDnEjB,IAAMC,WCAxB2D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d50e98f9.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css'\n\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({value: e.target.value});\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.onSearchEvent(this.state.value);\n  }\n\n  render() {\n    return (\n      <header className=\"header-section\">\n        <form className=\"search-wrapper\" onSubmit={this.handleSubmit}>\n          <label>\n            <input className=\"search-input\"  type=\"text\" placeholder=\"search for an anime, e.g Naruto\" name=\"query\" value={this.state.value} onChange={this.handleChange} />\n          </label>\n          <input className=\"search-btn\" type=\"submit\" value=\"Go\" />\n        </form>\n      </header>\n    );\n  }\n}","import React from 'react';\nimport './ListItem.css';\n\n\nexport default class ListItem extends React.Component {\n  render() {\n    const {title, url, image_url} = this.props.data;\n    return (\n      <a href={url} className=\"card\">\n        <div className=\"thumb\">\n          <img loading=\"lazy\" src={image_url} alt={title} />\n        </div>\n        <div className=\"detail-box\">\n          <span className=\"title\">{title}</span> \n        </div>\n      </a>\n    );\n  }\n}","import React from 'react';\nimport './Loader.css';\n\nexport default class Loader extends React.Component {\n  render() {\n    return (\n      <div class=\"loader\" id=\"loader\"></div>\n    );\n  }\n}","import React from 'react';\nimport './NotFound.css';\n\n\nexport default class NotFound extends React.Component {\n  render() {\n    return (\n      <div>Not found</div>\n    );\n  }\n}","import React from 'react';\nimport ListItem from '../ListItem/ListItem';\nimport Loader from '../Loader/Loader';\nimport NotFound from '../NotFound/NotFound';\nimport './Lists.css';\n\n\nexport default class Lists extends React.Component {\n  \n  onLoadMoreClick = (e) => {\n    this.props.onLoadMoreEvent();\n  }\n\n  render() {\n    const {loading, data, isEnd} = this.props;\n    return (\n      <React.Fragment>\n        {data && data.length ? (\n          <div>\n            <div className='card-container'>\n              {data.map((item) => (\n                <ListItem key={item.mal_id} data={item} />\n              ))}\n            </div>\n            {isEnd || loading ? null : (<button className=\"load-more-btn\" onClick={this.onLoadMoreClick}>Load More</button>) }\n          </div>\n\n        )  : null}\n        {loading ? <Loader /> : null}\n        {data && data.length === 0 && !loading ? <NotFound /> : null}\n      </React.Fragment>\n    );\n\n\n\n  }\n}","export const AppConfig = {\n  BaseAPI: 'https://api.jikan.moe',\n}","import BaseDataService from '../common/base_data_service';\n\nexport default class AnimeCommunication extends BaseDataService {\n  getDataByQuery = (query, pageNumber, limit) => {\n    return new Promise((resolve, reject) => {\n      this.getData(\n        `/v3/search/anime?q=${query}&limit=${limit}&page=${pageNumber}`,\n        err => reject(err),\n        res => resolve(res),\n      );\n    })\n  }\n}\n","import { AppConfig } from \"./config\";\r\n\r\nexport default class BaseDataService {\r\n\r\n  getData = (methodName, onError, onSuccess) => {\r\n    const appConfig = AppConfig.BaseAPI;\r\n    const responsePromise = fetch(`${appConfig}${methodName}`)\r\n    this.onResponseReceipt(responsePromise, onError, onSuccess);\r\n  }\r\n\r\n  onResponseReceipt = (responsePromise, onError, onSuccess) => {\r\n    responsePromise.then(response => {\r\n      return response.json()\r\n    }).then(responseJson => {\r\n      onSuccess(responseJson);\r\n    }).catch(exception => {\r\n      onError({ error: exception });\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Header from '../Header/Header';\nimport List from '../Lists/Lists';\nimport AnimeCommunication from '../../communications/anime_communication';\n\nclass App extends React.Component {\n  animeCommunication;\n  limit = 20;\n  pageNumber = 1;\n  searchQuery = \"\";\n\n  constructor(props) {\n    super(props);\n    this.animeCommunication = new AnimeCommunication();\n    this.state = {\n      results: [], \n      loading : false,\n      isEnd: false,\n    };\n  }\n\n  onSearchEvent = (query) => {\n    this.pageNumber = 1;\n    this.searchQuery = query.trim();\n    this.setState({\n      loading: true,\n      results: [],\n    });\n    this.fetchData(this.searchQuery);\n  } \n\n  onLoadMoreEvent = () => {\n    this.setState({\n      loading: true,\n    });\n    this.pageNumber++;\n    this.fetchData(this.searchQuery);\n  }\n\n  fetchData = (query) => {\n    this.animeCommunication.getDataByQuery(query, this.pageNumber, this.limit).then((resp) => {\n      const data = resp.results || [];\n      this.setState((state) => ({\n        results: state.results.concat(data),\n        loading: false,\n        isEnd: resp.last_page === this.pageNumber,\n      }));\n    }).catch(error => {\n      this.setState({\n        results: [],\n        loading: false,\n        isEnd: false,\n      });\n    });\n  }\n\n  render() {\n    const {loading, results, isEnd}  = this.state;\n    return (\n      <React.Fragment>\n        <Header onSearchEvent={this.onSearchEvent} />\n        <div className='container'>\n          <List data={results} loading={loading} isEnd={isEnd} onLoadMoreEvent={this.onLoadMoreEvent} />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}